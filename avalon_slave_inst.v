// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 32-bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Wed Dec 12 15:45:24 2018

avalon_slave avalon_slave_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.reset_n(reset_n_sig) ,	// input  reset_n_sig
	.chip_select(chip_select_sig) ,	// input  chip_select_sig
	.wait_request(wait_request_sig) ,	// output  wait_request_sig
	.go_transfer(go_transfer_sig) ,	// output  go_transfer_sig
	.transfer_complete(transfer_complete_sig) ,	// input  transfer_complete_sig
	.read_n(read_n_sig) ,	// input  read_n_sig
	.read_data(read_data_sig) ,	// output [31:0] read_data_sig
	.data_read_from_spi(data_read_from_spi_sig) ,	// input [31:0] data_read_from_spi_sig
	.write_n(write_n_sig) ,	// input  write_n_sig
	.write_data(write_data_sig) ,	// input [31:0] write_data_sig
	.data_write_to_spi(data_write_to_spi_sig) 	// output [31:0] data_write_to_spi_sig
);

